<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Go - 分类 - Jimi’s Blog</title>
        <link>https://zucczwp.github.io/categories/go/</link>
        <description>Go - 分类 - Jimi’s Blog</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>2114272829@qq.com (jimi)</managingEditor>
            <webMaster>2114272829@qq.com (jimi)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Mon, 12 Feb 2024 00:00:00 &#43;0000</lastBuildDate><atom:link href="https://zucczwp.github.io/categories/go/" rel="self" type="application/rss+xml" /><item>
    <title>once用法</title>
    <link>https://zucczwp.github.io/posts/go/once/</link>
    <pubDate>Mon, 12 Feb 2024 00:00:00 &#43;0000</pubDate>
    <author>Jimi</author>
    <guid>https://zucczwp.github.io/posts/go/once/</guid>
    <description><![CDATA[使用场景 once常常用来初始化单例资源，或者并发访问只需初始化一次的共享资源，或者在测试的时候初始化]]></description>
</item>
<item>
    <title>random用法</title>
    <link>https://zucczwp.github.io/posts/go/rand/</link>
    <pubDate>Mon, 12 Feb 2024 00:00:00 &#43;0000</pubDate>
    <author>Jimi</author>
    <guid>https://zucczwp.github.io/posts/go/rand/</guid>
    <description><![CDATA[golang生成随机数可以使用math/rand包 示例如下： package main import ( &#34;fmt&#34; &#34;math/rand&#34; ) func main() { for i:=0; i&lt;10; i++ { fmt.Println(rand.Intn(100)) } } 而发]]></description>
</item>
<item>
    <title>channel用法</title>
    <link>https://zucczwp.github.io/posts/go/channel/</link>
    <pubDate>Fri, 12 Jan 2024 00:00:00 &#43;0000</pubDate>
    <author>Jimi</author>
    <guid>https://zucczwp.github.io/posts/go/channel/</guid>
    <description><![CDATA[CSP 允许使用进程组件来描述系统，它们独立运行，并且只通过消息传递的方式通信 channel的应用场景 执行]]></description>
</item>
<item>
    <title>cond用法</title>
    <link>https://zucczwp.github.io/posts/go/cond/</link>
    <pubDate>Fri, 12 Jan 2024 00:00:00 &#43;0000</pubDate>
    <author>Jimi</author>
    <guid>https://zucczwp.github.io/posts/go/cond/</guid>
    <description><![CDATA[go标准库cond cond通常应用于等待某个条件一组gorotine，等条件变为true的时候，其中]]></description>
</item>
<item>
    <title>map用法</title>
    <link>https://zucczwp.github.io/posts/go/map/</link>
    <pubDate>Fri, 12 Jan 2024 00:00:00 &#43;0000</pubDate>
    <author>Jimi</author>
    <guid>https://zucczwp.github.io/posts/go/map/</guid>
    <description><![CDATA[go内建的map类型 map的类型是map[key] key类型的k必须是可比较的 map[key]函数返]]></description>
</item>
<item>
    <title>rwmutex用法</title>
    <link>https://zucczwp.github.io/posts/go/rwmutex/</link>
    <pubDate>Fri, 12 Jan 2024 00:00:00 &#43;0000</pubDate>
    <author>Jimi</author>
    <guid>https://zucczwp.github.io/posts/go/rwmutex/</guid>
    <description><![CDATA[什么是RWMutex？ 方法： Lock/Unlock：写操作时调用的方法 RLock/RUnlock：读]]></description>
</item>
</channel>
</rss>
